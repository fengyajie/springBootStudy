# mysql
#在使用spring boot操作数据库的时候，莫名其妙抛了一个错误:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. 
#这个错误是因为mysql连接的依赖包是高版本的情况下：在配置datasource.url时不能简单的这样配：需要加上一些?后面的后缀信息
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/shiro?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.max-idle=10
#spring.datasource.max-wait=10000
#spring.datasource.min-idle=5
#spring.datasource.initial-size=5
# mybatis.config= classpath:mybatis-config.xml
#mybatis.mapperLocations指向位置:src/main/resource
#mybatis.mapperLocations=classpath:mapper/*.xml

#多数据源配置
#数据源1
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#这里配置成jdbc-url不然报错:jdbcUrl is required with driverClassName.不知道什么原因
spring.datasource.shiro.jdbc-url=jdbc:mysql://127.0.0.1:3306/shiro?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.shiro.username=root
spring.datasource.shiro.password=root
spring.datasource.shiro.driver-class-name=com.mysql.jdbc.Driver



#数据源2
spring.datasource.springboot.jdbc-url=jdbc:mysql://127.0.0.1:3306/springboot?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.springboot.username=root
spring.datasource.springboot.password=root
spring.datasource.springboot.driver-class-name=com.mysql.jdbc.Driver


# 下面为连接池的补充设置，应用到上面所有数据源中

# 初始化大小，最小，最大

spring.datasource.initialSize=5

spring.datasource.minIdle=5

spring.datasource.maxActive=20

# 配置获取连接等待超时的时间

spring.datasource.maxWait=60000

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒

spring.datasource.timeBetweenEvictionRunsMillis=60000

# 配置一个连接在池中最小生存的时间，单位是毫秒

spring.datasource.minEvictableIdleTimeMillis=300000

spring.datasource.validationQuery=SELECT 1 FROM DUAL

spring.datasource.testWhileIdle=true

spring.datasource.testOnBorrow=false

spring.datasource.testOnReturn=false

# 打开PSCache，并且指定每个连接上PSCache的大小

spring.datasource.poolPreparedStatements=true

spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙

spring.datasource.filters=stat,wall,log4j

# 通过connectProperties属性来打开mergeSql功能；慢SQL记录

spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# 合并多个DruidDataSource的监控数据

# mybatis.config= classpath:mybatis-config.xml
#mybatis.mapperLocations指向位置:src/main/resource
#mybatis.mapperLocations=classpath:mapper/*.xml

# mybatis
# 对应实体类的包名
mybatis.typeAliasesPackage=com.example.domain

#mybatis 其他配置相关详解如下：

 #   mybatis.config = mybatis 配置文件名称
 #   mybatis.mapperLocations = mapper xml 文件地址

  #  mybatis.typeAliasesPackage = 实体类包路径
  #  mybatis.typeHandlersPackage = type handlers 处理器包路径
   # mybatis.check-config-location = 检查 mybatis 配置是否存在，一般命名为 mybatis-config.xml

  #  mybatis.executorType = 执行模式。默认是 SIMPLE
