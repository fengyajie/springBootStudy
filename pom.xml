<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>springBootTest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>springBootTest</name>
	<description>Demo project for Spring Boot</description>

    <!-- 获取springboot合适的默认配置, 该parent项目提供一下特性:-->
    <!-- 默认编译级别为java 1.6;源码编码utf-8;一个dependency managemengt 节点，允许你省略常见依赖的<version>标签，继承自spring-boot-dependencies pom -->
    <!-- 恰到好处的资源过滤 -->
    <!-- 所有官方starters遵循相似的命名规则：spring-boot-starter-*,第三方starters不应以spring-boot开头 -->
    
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<!-- 不是每个人都喜欢继承spring-boot-starter-parent pom,可能你需要使用公司的parent,如果不想使用spring-boot-starter-parent,通过设置scope=import,如下配置 -->
     <!-- 以下设置不允许你使用属性覆盖个别依赖，为了达到这个目的，你需要在项目的 dependencyManagement节点中，在spring-boot-dependencies实体前插入一个节点-->
     <!-- <dependencyManagement>
        <dependencies> 
        
         <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-releasetrain</artifactId>
            <version>Fowler-SR2</version>
             <type>pom</type>
             <scope>import</scope>
         </dependency>
         
         
          <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-dependencies</artifactId>
             <version>2.0.6.RELEASE</version>
             <type>pom</type>
             <scope>import</scope>
          </dependency>
        </dependencies>
     </dependencyManagement> -->
     
     
     
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<shiro.version>1.4.0</shiro.version>
		<commons.lang.version>2.6</commons.lang.version>
		<kaptcha.version>0.0.9</kaptcha.version>
	</properties>


	<dependencies>
	   <!-- spring boot提供了一个它锁支持的精选依赖列表，在配置里你不需要提供任何依赖的版本，如果有必要你可以指定版本来覆盖spring boot的默认版本 -->
	   <!-- springboot每次发次发布都关联一个spring框架的基础版本，所以建议不要自己指定spring版本 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<!-- 排除psring-boot对 spring-boot-starter-logging的依赖,默认logback-->
			<!-- <exclusions>
			  <exclusion>
			     <groupId>org.springframe.boot</groupId>
			     <artifactId>spring-boot-starter-logging</artifactId>
			  </exclusion>
			</exclusions> -->
		</dependency>
		
		<!-- 添加log4j ,logback是log4j的优化，性能优于log4j-->
		<!-- <dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-log4j</artifactId>
		</dependency> -->
		
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>jackson-databind</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
			</exclusions>
		</dependency>

        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
            <scope>true</scope>
        </dependency> -->
        
        <dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>

<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons.lang.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.axet</groupId>
			<artifactId>kaptcha</artifactId>
			<version>${kaptcha.version}</version>
		</dependency>
		
		<dependency> 
		  <groupId>com.alibaba</groupId> 
		  <artifactId>druid</artifactId> 
		  <version>1.0.18</version>
		</dependency>
		
		<dependency>
	      <groupId>org.springframework.boot</groupId>
	      <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- springboot-aop包,AOP切面注解,Aspectd等相关注解 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

       <!-- jdbcTemple  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!-- 设置mybatis -->
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>1.1.1</version>
    </dependency>
   <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.11</version>
    </dependency>
    
    <!-- https://mvnrepository.com/artifact/javax.mail/mail -->
<dependency>
    <groupId>javax.mail</groupId>
    <artifactId>mail</artifactId>
    <version>1.4.7</version>
</dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi</artifactId>
    <version>3.17</version>
</dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <version>3.17</version>
</dependency>
		
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.2.2</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.2.2</version>
		</dependency>
		
      <dependency>  
         <groupId>com.alibaba</groupId>  
         <artifactId>fastjson</artifactId>  
         <version>1.2.15</version>  
  </dependency> 
  
  <!-- 监控和管理环境 -->
  <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator -->
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-actuator</artifactId>
    <version>2.1.1.RELEASE</version>
</dependency>
  
  <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>

        <dependency>
           <groupId>org.springframework.session</groupId>
           <artifactId>spring-session-data-redis</artifactId>
        </dependency>
        
        <!-- pringboot2.X默认使用lettuce连接池，需要引入commons-pool2 -->
        <!-- springboot 2.X 版本使用lettuce连接池来替换jedis。Lettuce和Jedis都是连接Redis Server的客户端程序，Jedis在实现上是直连redis server，
            多线程环境下非线程安全，除非使用连接池，为每个Jedis势力增加物理连接。Lettuce基于Netty的势力连接，可以再多个线程间并发访问，且线程安全，
            满足多线程环境下的并发访问，同时它是可伸缩的设计，一个连接实例不够的情况也可以按需增加连接实例。-->
        <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-pool2</artifactId>
        </dependency>
        
        <dependency>
           <groupId>com.springboot.dubbo</groupId>
           <artifactId>api</artifactId>
           <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
    <groupId>com.github.theborakompanioni</groupId>
    <artifactId>thymeleaf-extras-shiro</artifactId>
    <version>2.0.0</version>
</dependency>

<dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.9.0</version>
        </dependency>

<dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
        </dependency>
        
        <dependency>
    <groupId>cn.hutool</groupId>
    <artifactId>hutool-all</artifactId>
    <version>5.0.3</version>
</dependency>

<!-- shiro整合cas单点 -->
    <dependency> 
      <groupId>org.apache.shiro</groupId> 
      <artifactId>shiro-cas</artifactId> 
      <version>1.2.4</version> 
    </dependency> 
  
  <!-- <dependency>  
           <groupId>javax.servlet</groupId>  
           <artifactId>javax.servlet-api</artifactId>  
       </dependency>
       
       <dependency>  
           <groupId>javax.servlet</groupId>  
           <artifactId>jstl</artifactId>  
       </dependency>  
        
        
        
       tomcat 的支持.  
       <dependency>  
           <groupId>org.springframework.boot</groupId>  
           <artifactId>spring-boot-starter-tomcat</artifactId>  
       </dependency>  
       <dependency>  
           <groupId>org.apache.tomcat.embed</groupId>  
           <artifactId>tomcat-embed-jasper</artifactId>  
       </dependency>   -->
		<!-- <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-redis</artifactId>
           <version>1.3.5.RELEASE</version>
        </dependency> -->
	</dependencies>
 
    <!-- 创建可执行jar -->
    <!-- 如果使用spring boot starter parent pom,你只需添加该插件而无需配置它，除非你想改变定义在parent中的设置 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				
				<configuration>
                <fork>true</fork>     <!--fork :  如果没有该项配置，肯呢个devtools不会起作用，即应用不会restart -->
            </configuration>
			</plugin>
		</plugins>
		
		<!-- 添加资源 -->
        <!-- <resources>
            <resource>
                <directory>src/main/resources</directory>
                src/main/resources下的指定资源放行
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                    <include>**/*.xml</include>
                    <include>**/*.html</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources> -->
	</build>


</project>
